{"ast":null,"code":"import { Item } from './Classes/Item';\nimport * as i0 from \"@angular/core\";\nexport class ItemService {\n  constructor() {\n    this.items = [];\n  }\n  get item() {\n    return this.items;\n  }\n  getItem(name) {\n    return this.items.find(item => item.name === name) ?? new Item();\n  }\n}\nItemService.ɵfac = function ItemService_Factory(t) {\n  return new (t || ItemService)();\n};\nItemService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ItemService,\n  factory: ItemService.ɵfac,\n  providedIn: 'root'\n});\n{\n  const index = this.items.findIndex(i => i.name === Item.name);\n  if (index !== -1) {\n    this.UpdateItem(index, item);\n  } else this.addItem(item);\n  {}\n}","map":{"version":3,"mappings":"AACA,SAASA,IAAI,QAAQ,gBAAgB;;AAKrC,OAAM,MAAOC,WAAW;EAExBC;IADQ,UAAK,GAAQ,EAAE;EACP;EAChB,IAAIC,IAAI;IAEN,OAAO,IAAI,CAACC,KAAK;EACnB;EACAC,OAAO,CAACC,IAAW;IACnB,OAAO,IAAI,CAACF,KAAK,CAACG,IAAI,CAACJ,IAAI,IAAGA,IAAI,CAACG,IAAI,KAAGA,IAAI,CAAC,IAAE,IAAIN,IAAI,EAAE;EAC3D;;AATaC,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAO,SAAXP,WAAW;EAAAQ,YAFZ;AAAM;AAalB;EACE,MAAMC,KAAK,GAAG,IAAI,CAACN,KAAK,CAACO,SAAS,CAACC,CAAC,IAAEA,CAAC,CAACN,IAAI,KAAGN,IAAI,CAACM,IAAI,CAAC;EACzD,IAAGI,KAAK,KAAK,CAAC,CAAC,EAAC;IAChB,IAAI,CAACG,UAAU,CAACH,KAAK,EAACP,IAAI,CAAC;GAC1B,MACD,IAAI,CAACW,OAAO,CAACX,IAAI,CAAC;EAAC","names":["Item","ItemService","constructor","item","items","getItem","name","find","factory","providedIn","index","findIndex","i","UpdateItem","addItem"],"sourceRoot":"","sources":["D:\\AngulerServeces2\\ClientApp\\src\\app\\Item.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Item } from './Classes/Item';\n\n@Injectable({\nprovidedIn: 'root'\n})\nexport class ItemService {\nprivate items:Item[]=[];\nconstructor() { }\nget item()\n{\n  return this.items;\n}\ngetItem(name:string):Item{\nreturn this.items.find(item=> item.name===name)??new Item();\n}\nAddOrUpdateItem(item: Item) void\n{\n  const index = this.items.findIndex(i=>i.name===Item.name);\n  if(index !== -1){\n  this.UpdateItem(index,item);\n  }else\n  this.addItem(item);{\n\n  }\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}