{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ItemService {\n  constructor() {\n    this.items = [];\n  }\n  getItems() {\n    return this.items;\n  }\n  getItem(name) {\n    return this.items.find(item => item.name === name) ?? new Item();\n  }\n  addOrUpdateItem(item) {\n    const index = this.items.findIndex(i => i.name === item.name);\n    if (index !== -1) {\n      this.updateItem(index, item);\n    } else {\n      this.addItem(item);\n    }\n  }\n  addItem(item) {\n    this.items.push(item);\n  }\n  updateItem(index, item) {\n    this.items[index] = item;\n  }\n  deleteItem(name) {\n    this.items = this.items.filter(item => item.name !== name);\n  }\n}\nItemService.ɵfac = function ItemService_Factory(t) {\n  return new (t || ItemService)();\n};\nItemService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ItemService,\n  factory: ItemService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,WAAW;EAHxBC;IAIU,UAAK,GAAW,EAAE;;EAC1BC,QAAQ;IACN,OAAO,IAAI,CAACC,KAAK;EACnB;EAEFC,OAAO,CAACC,IAAW;IACnB,OAAO,IAAI,CAACF,KAAK,CAACG,IAAI,CAACC,IAAI,IAAGA,IAAI,CAACF,IAAI,KAAKA,IAAI,CAAC,IAAE,IAAIG,IAAI,EAAE;EAC7D;EACAC,eAAe,CAACF,IAAU;IACxB,MAAMG,KAAK,GAAG,IAAI,CAACP,KAAK,CAACQ,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACP,IAAI,KAAKE,IAAI,CAACF,IAAI,CAAC;IAC7D,IAAIK,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACG,UAAU,CAACH,KAAK,EAAEH,IAAI,CAAC;KAC7B,MAAM;MACL,IAAI,CAACO,OAAO,CAACP,IAAI,CAAC;;EAEtB;EACQO,OAAO,CAACP,IAAS;IACvB,IAAI,CAACJ,KAAK,CAACY,IAAI,CAACR,IAAI,CAAC;EACvB;EACQM,UAAU,CAACH,KAAa,EAAEH,IAAU;IACxC,IAAI,CAACJ,KAAK,CAACO,KAAK,CAAC,GAACH,IAAI;EACxB;EACAS,UAAU,CAACX,IAAW;IACpB,IAAI,CAACF,KAAK,GAAE,IAAI,CAACA,KAAK,CAACc,MAAM,CAACV,IAAI,IAAEA,IAAI,CAACF,IAAI,KAAIA,IAAI,CAAC;EACxD;;AAzBWL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFZ;AAAM","names":["ItemService","constructor","getItems","items","getItem","name","find","item","Item","addOrUpdateItem","index","findIndex","i","updateItem","addItem","push","deleteItem","filter","factory","providedIn"],"sourceRoot":"","sources":["D:\\AngulerServeces2\\ClientApp\\src\\app\\Item.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Items } from './Classes/Item';\n\n@Injectable({\nprovidedIn: 'root'\n})\nexport class ItemService {\n  private items: Item[] = [];\n  getItems(): Item[] {\n    return this.items;\n  }\n\ngetItem(name:string):Item{\nreturn this.items.find(item=> item.name === name)??new Item();\n}\naddOrUpdateItem(item: Item): void {\n  const index = this.items.findIndex(i => i.name === item.name);\n  if (index !== -1) {\n    this.updateItem(index, item);\n  } else {\n    this.addItem(item);\n  }\n}\nprivate addItem(item:Item):void{\n  this.items.push(item);\n}\nprivate updateItem(index: number, item: Item):void {\n    this.items[index]=item;\n  }\n  deleteItem(name:string):void{\n    this.items =this.items.filter(item=>item.name !==name);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}